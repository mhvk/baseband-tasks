language: python

# We need a full clone to make sure setuptools_scm works properly
git:
    depth: false

os:
    - linux

dist: bionic

# The apt packages below are needed for sphinx builds. A full list of packages
# that can be included can be found here:
#
# https://github.com/travis-ci/apt-package-whitelist/blob/master/ubuntu-precise

addons:
    apt:
        packages:
            - graphviz


stages:
   # Do the style check and a single test job, don't proceed if it fails
   - name: Initial tests
   # Test docs, astropy dev, and without optional dependencies
   - name: Comprehensive tests
   # These will only run when cron is opted in
   - name: Cron tests
     if: type = cron

env:
    global:

        # The following versions are the 'default' for tests, unless
        # overridden underneath. They are defined here in order to save having
        # to repeat them for all configurations.
        - SETUP_METHOD='tox'

        # The following three variables are for tox. TOXENV is a standard
        # variable that tox uses to determine the environment to run,
        # TOXARGS are arguments passed to tox, and TOXPOSARGS are arguments
        # that tox passes through to the {posargs} indicator in tox.ini.
        # The latter can be used for example to pass arguments to pytest.
        - TOXENV='test'
        - TOXARGS='-v'
        - TOXPOSARGS=''

        # If there are matplotlib or other GUI tests, uncomment the following
        # line to use the X virtual framebuffer.
        # - SETUP_XVFB=True

jobs:

    # Don't wait for allowed failures
    fast_finish: true

    include:

        - name: Tests that all the basics are covered.
          stage: Initial tests
          python: 3.8
          env: TOXENV=py38-test

        - name: Code style checks
          stage: Initial tests
          python: 3.8
          env: TOXENV=codestyle

        # pyfftw seems to need python 3.7 [2020-Jan-31]
        - name: Documentation build
          stage: Comprehensive tests
          python: 3.7
          env: TOXENV=build_docs

        - name: Coverage using oldest supported versions
          stage: Comprehensive tests
          python: 3.6
          env: TOXENV="py36-test-oldestdeps-alldeps-cov"

        - name: Python 3.8 with developer version of baseband
          stage: Comprehensive tests
          python: 3.8
          env: TOXENV=py38-test-basebanddev

        # Regularly test with developer versions
        - name: With developer versions of all dependencies
          stage: Cron tests
          python: 3.8
          env: TOXENV=py38-test-devdeps-alldeps

        # Also regularly try the big-endian s390x architecture, in the
        # process checking that installing dependencies with apt works.
        - name: big-endian s390x architecture with apt
          stage: Initial tests
          arch: s390x
          language: c
          addons:
            apt:
              sources:
              - sourceline: 'deb http://ftp.us.debian.org/debian testing main'
                key_url: 'https://ftp-master.debian.org/keys/archive-key-10.asc'
              packages:
              - python3-astropy
              - python3-pyfftw
              - python3-h5py
              - python3-yaml
              - python3-attr  # too old in bionic
              - python3-h5py-serial  # not needed on amd64; weird.
              - libhdf5-hl-100  # not needed on amd64; weird.
          env: SETUP_METHOD='apt'

install:

    # We now use the ci-helpers package to set up our testing environment.

    - if [[ $SETUP_METHOD == 'tox' ]]; then
        pip install tox;
      else
        /usr/bin/pip3 install --user baseband;
      fi

    - if [[ $TOXENV == *-cov ]]; then
        export TOXPOSARGS=$TOXPOSARGS" --cov-report=xml:"$TRAVIS_BUILD_DIR"/coverage.xml";
      fi

script:
    - if [[ $SETUP_METHOD == 'tox' ]]; then
        tox $TOXARGS -- $TOXPOSARGS;
      else
        pytest-3;
      fi

after_success:
    - if [[ $TOXENV == *-cov ]]; then
        pip install codecov;
        codecov --gcov-glob "*cextern*";
      fi
